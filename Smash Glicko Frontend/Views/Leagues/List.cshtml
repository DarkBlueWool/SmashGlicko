@using Smash_Glicko_Frontend.Models
@using Smash_Glicko_Frontend.Data

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@inject ApplicationDbContext context
@{
    IEnumerable<DatabaseLeagueModel> Leagues = context.Leagues.Where(League => League.IsPublic == true).AsEnumerable();
    List<Glicko_Smash_Implementation_Web_Frontend.Shortcuts.GameData> data = Glicko_Smash_Implementation_Web_Frontend.Shortcuts.Shortcuts.GetGameData(@"Data/GameData.xml");
    Dictionary<string, string> GameNames = new Dictionary<string, string>();
    foreach (Glicko_Smash_Implementation_Web_Frontend.Shortcuts.GameData Game in data)
    {
        GameNames.Add(Game.InternalID, Game.Name);
    }
}

<body>
    <div class=Title>
        <h>Public Leagues</h>
    </div>

    <ol class=NoStyleList name=”LeagueList” id=”LeagueList”>
        @foreach (DatabaseLeagueModel League in Leagues)
        {
            <li class=League>
                <a class=LeagueLink href="@Url.Action("Display", "Leagues", new ViewLeagueModel(League.LeagueId))">
                    <div class=LeagueItem>@League.LeagueName</div>
                    <div class=LeagueItem>@GameNames[League.LeagueGame]</div>
                    <div class=LeagueItem></div>
                    <div class=LeagueItem>@(League.TimeFrameIDs.Length/4)<br>Timeframes</div>
                    <div class=LeagueItem>idfk<br>Events</div>
                </a>
            </li>
        }
    </ol>
</body>